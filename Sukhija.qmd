---
title: "Sukhija"
format: html
---

Graded Lab - 5th November, 2024

```{r}
here::i_am("test-grades.Rproj") 
library(here)
library(stringr)
library(dplyr)
library(tidyr)
library(vroom) 
library(ggplot2)
theme_set(theme('bw'))
#| message: false
#| warning: false
#| eval: false
```

ANSWER-1

```{r}
table=read.csv("grades.csv")
```
```{r}
# ANSWER-2 # SOME ISSUE i.e when I render it isnt recognising grade object, W/O answer 2 everything working.

# exists("grade")
# y <- nrow(grade) 
# y
# The data set contains `r y` grades 
```




ANSWER-3
```{r}
x <- table |>
distinct(id) |>
nrow() 
x
```

The number of students are `r x`.

ANSWER-4

```{r}
students <- table |> 
  distinct(id, group)
head(students)
```

ANSWER-5

```{r}
ggplot(students, aes(x = group)) +
  geom_bar() + xlab("Group") + ylab("Number of Students") + ggtitle("Number of Students per Group")
```

ANSWER 6

```{r}
avg_victorian <- table |> 
  filter(course == "Victorian Literature and Social Commentary") |>
group_by(group)|> 
  summarise(avg_grade = mean(grade, na.rm = TRUE))
avg_victorian
ggplot(avg_victorian, aes(x = group, y = avg_grade)) +
  geom_col()
```

ANSWER-7

```{r}
# Plot distribution by semester with density plot
ggplot(table, aes(x = grade, fill = 'semester')) +
  geom_density(alpha = 0.4)  + xlab("Grade") +
  ylab("Density") +
  ggtitle("Distribution of Grades by Semester") +
  scale_fill_manual(values = c("lightblue", "lightcoral"))
```

ANSWER - 8

```{r}
grades_per_student <- table |> 
  group_by(id, group) |> 
  summarise(num_grades = n(), .groups = "drop")
head(grades_per_student)


# summary function
grade_stats <- grades_per_student |> 
  summarise(
    min_grades = min(num_grades),
    max_grades = max(num_grades),
    avg_grades = mean(num_grades),
    median_grades = median(num_grades))
grade_stats
```
|                |          |
|----------------|----------|
| Summary        | Values   |
| Minimum Grades | 54       |
| Maximum Grades | 61       |
| Average Grades | 58.97962 |
| Median Grades  | 59       |
ANSWER-9
```{r}
etiquette_grades <- table |> 
  filter(course == "Etiquette and Social Graces") |> 
  group_by(id, group) |> 
  summarise(num_grades = n(), .groups = "drop")
head(etiquette_grades) # extract
```
ANSWER-10
```{r}
grade_distribution <- etiquette_grades |> 
  count(num_grades, name = "num_students")
head(grade_distribution)
ggplot(grade_distribution, aes(x = num_grades, y = num_students)) +
  geom_col(fill = "skyblue") +
  xlab("Number of Grades in Etiquette and Social Graces") +
  ylab("Number of Students") +
  ggtitle("Distribution of Grades per Student in Etiquette and Social Graces")
```
ANSWER-11
```{r}
# Box plot to compare number of grades by group
etiquette_grades$group <- as.factor(etiquette_grades$group)

ggplot(etiquette_grades, aes(x = group, y = num_grades)) +
  geom_boxplot(fill = "lightblue") +
  xlab("Group") +
  ylab("Number of Grades in Etiquette and Social Graces") +
  ggtitle("Number of Grades per Student by Group in Etiquette and Social Graces")

```
ANSWER-12
```{r}
avg_grades <- table |> 
  group_by(id, group, course) |> 
  summarise(avg_grade = mean(grade, na.rm = TRUE), .groups = "drop")

# Pivot the data to have one column per course
wide_grades <- avg_grades |> 
  pivot_wider(names_from = course, values_from = avg_grade)

head(wide_grades)
```
ANSWER-13
```{r}
average_grades <- table |> 
  filter(course %in% c("Cryptography and Codebreaking", "Victorian Literature and Social Commentary")) |> 
  group_by(id, course) |> 
  summarise(avg_grade = mean(grade, na.rm = TRUE), .groups = "drop")

# Pivot to create separate columns for each course's average grade
grades_wide <- average_grades |> 
  pivot_wider(names_from = course, values_from = avg_grade, 
              names_prefix = "avg_")

grades_wide

# Scatter plot of average grades in Cryptography vs. Victorian Literature
# ggplot (grades_wide, aes(x = avg_Victorian Literature and Social Commentary, y = avg_Cryptography and Codebreaking)) +
# geom_point(color = "blue", size = 3, alpha = 0.7) +
  #geom_smooth(method = "lm", color = "red", se = FALSE) 

```

ANSWER-14
```{r} 
avg_grades <- table |> 
  filter(course %in% c("Victorian Literature and Social Commentary", "Airship Piloting and Navigation")) |> 
  group_by(id, group, course) |> 
  summarise(avg_grade = mean(grade, na.rm = TRUE), .groups = "drop")
# Compute correlation within each group
grades_wide




```
ANSWER-15
```{r}
library(dplyr)
library(tidyr)

# Filter and calculate average grades for each subject per student
avg_grades <- table |> 
  filter(course %in% c("Victorian Literature and Social Commentary", "Airship Piloting and Navigation")) |> 
  group_by(id, group, course) |> 
  summarise(avg_grade = mean(grade, na.rm = TRUE), .groups = "drop")

# Pivot to wide format to create separate columns for each course's average grade
grades_wide <- avg_grades |> 
  pivot_wider(names_from = course, values_from = avg_grade, 
              names_prefix = "avg_")

# Compute correlation within each group
# correlations <- grades_wide |> 
  #group_by(group) |> 
  #summarise(correlation = cor(avg_Victorian_Literature_and_Social_Commentary, avg_Airship_Piloting_and_Navigation, use = "complete.obs"))

# Identify the group with the highest absolute correlation
# highest_corr_group <- correlations |> 
  #filter(abs(correlation) == max(abs(correlation))) |> 
  # pull(group)

```
ANSWER-16
